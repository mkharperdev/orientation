1. Where can you find the most complete Ruby documentation?
ruby-doc.org

2. Locate the description of the while loop in the ruby documentation.
https://docs.ruby-lang.org/en/2.7.0/syntax/control_expressions_rdoc.html
The while loop executes while a condition is true.

3. Using the ruby documentation, determine what value a while loop returns.
The result of a while loop is nil unless break is used to supply a value.


4. In the previous exercise, you learned that the while loop returns nil unless break is used. Locate the documentation for break, 
and determine what value break sets the return value to for the while loop.
break returns nil when no arguments are passed to break, or the value of the argument when an argument is provided.


5. Using the ruby documentation, determine how you can write large numbers in a way that makes them easier to read.
The underscore may be used to enhance readability for humans. You may place an underscore anywhere in the number.
https://docs.ruby-lang.org/en/2.7.0/syntax/literals_rdoc.html

6. Using the ruby documentation, determine how you would write a Symbol that represents your name. We aren't looking for a String; 
we want a Symbol, which is one of ruby's datatypes.
:Maranda
https://docs.ruby-lang.org/en/2.7.0/syntax/literals_rdoc.html

7. Let's move on now to the documentation you will use most often; the core API section on Classes and Modules. 
All of these are listed under Classes on the Core API page.

Don't worry too much about the term class. For now, think of classes as data types: numbers, character strings, arrays, hashes, etc.
https://docs.ruby-lang.org/en/2.7.0/String.html

8. Use the ruby documentation for the String class to determine which method can be used to right justify a String object.
#rjust

9. How would you use String #upcase to create an uppercase version of the string "xyz"?
x = "xyz".upcase

10. Assume you have this Array:

a = %w(a b c d e)

How would you use Array#insert to insert the numbers 5, 6, and 7 between the elements with values 'c' and 'd'?
a.insert (3, 5, 6, 7)

11.  Assume you have the following code:  What will each of the 3 puts statements print?

s = 'abc def ghi,jkl mno pqr,stu vwx yz'
puts s.split.inspect.   ["abc", "def", "ghi,jkl", "mno", "pqr,stu", "vwx", "yz"]
 => nil 
puts s.split(',').inspect.   ["abc def ghi", "jkl mno pqr", "stu vwx yz"]
 => nil 
puts s.split(',', 2).inspect.    ["abc def ghi", "jkl mno pqr,stu vwx yz"]
 => nil 


